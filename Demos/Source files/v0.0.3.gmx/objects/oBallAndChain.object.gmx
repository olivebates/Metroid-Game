<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite10</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sChainballHitbox</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movSpd = 18;
speed = movSpd;
direction = point_direction(x, y, mouse_x, mouse_y);
gravity = 0.11
chainLengthTimer = room_speed*.5;
shotTmr = 5;

hookedItem = noone;
hookedMechanic = "";

xpre = 0;
ypre = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Hoked states
switch (hookedMechanic){
    // Pull
    case "pull": 
        x = hookedItem.x;
        y = hookedItem.y;
        speed = 0;
        
        with (hookedItem)
        {
            applyForce(0.5, id, oPlayer);
            stunned = room_speed/2;
        }
    break;
    
    case "hook": 
        x = hookedItem.x;
        y = hookedItem.y;
        speed = 0;
        
        if (position_meeting(x, y, oPlayer) &amp;&amp; global.hookType)
        {
            instance_destroy();
            exit;
        }
        
        with (oPlayer)
        {  
            jumpsLeft = maxjumps;
            noJump = true;
            
            if (global.hookType) {
                speed = 4;
                direction = point_direction(x, y, other.x, other.y);
            } else {
                applyForce(min(0.3, point_distance(x, y, other.x, other.y)/200), id, other);
                if (point_distance(x, y, other.x, other.y) &gt; 200) {
                    applyForce(min(0.25, point_distance(x, y, other.x, other.y)/500), id, other);
                }
            }
            
            if (position_meeting(x, y, oHookItem)) {
                hspeed *= 0.9;
                if (hspeed &lt; 0.05 and hspeed &gt; -0.05)
                    hspeed = 0;
                if (vspeed &gt; 0)
                    vspeed *= 0.9;
            }
        }
    break;
}


// Move ball towards player
applyForce(0.5, id, oPlayer);

// If ball is stuck
if (abs(y - ypre) &lt; 1)
{
    with (oPlayer)
    {
        // move player towards ball
        var beginDist = 240;
        if (point_distance(x, y, other.x, other.y) &gt; beginDist)
        {
            // Apply force
            applyForce((point_distance(x, y, other.x, other.y) - beginDist) /300, id, other);
        }
        
        if (point_distance(x, y, other.x, other.y) &gt; 190)
        {
            // Only horisontal force
            var spd = 0.3;
            var dir = point_direction(x, y, other.x, other.y);
            var lenx = lengthdir_x(spd, dir);
            hspeed += sign(lenx) * 0.12;
        }
        
        // Deadzone
        if (hspeed &lt; 0.1 and hspeed &gt; -0.1)
            hspeed = 0;
            
    }
} else {
}

xpre = x;
ypre = y;

shotTmr--;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oButton">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.image_single = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oHookItem">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotTmr &gt; 0)
    exit;
    
hookedItem = other;
hookedMechanic = "hook";


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotTmr &gt; 0)
    exit;
    
hookedItem = other;
hookedMechanic = "pull";


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotTmr &gt; 0)
    exit;
    
if (instance_exists(hookedItem) &amp;&amp; hookedItem != oHookItem)
    exit;
    
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWallPar">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!place_free(x + hspeed, y))
{
    move_contact_solid(direction, speed);
    hspeed = 0;
}
if (!place_free(x, y + vspeed))
{
        move_contact_solid(direction, speed);
        vspeed = 0;
        hspeed *= 0.9;
}
if (!place_free(x + hspeed, y) &amp;&amp; !place_free(x, y + vspeed))
{
    move_contact_solid(direction, speed);
    vspeed = 0;
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_color(c_black);
draw_line_width(x, y, oPlayer.x, oPlayer.y, 8);
draw_set_color(c_white);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
